<!DOCTYPE html>
<html>
<head>
  <title>Bell Inequality Experiment</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.min.js"></script>
  <style type="text/css">
    table {
      border-collapse: collapse;
    }
    table td, table th {
      border: 1px solid black;
      padding: 5px;
    }
  </style>
</head>
<body>
  <h1>Coincidents</h1>
  <small>
    Main result, the probability of conincidence in relation to the relative
    angle of the detectors.
  </small>
  <div id="graph-coincidents" style="width: 100%; height: 500px"></div>

  <h1>Maximum S values</h1>
  <small>
    Main result, the maximum possible S value for a selected angle as (a).
    The bell theorem states that it's impossible for any HVT to exceed a
    maximum S value of 2 for any selected 4 angles.
  </small>
  <div id="graph-s-max" style="width: 100%; height: 400px"></div>
  <table id="table-s-max">
    <thead>
      <tr>
        <th>Theory</th>
        <th>S Max</th>
        <th>Angle A</th>
        <th>Angle B</th>
        <th>Angle C</th>
        <th>Angle D</th>
      </tr>
    </thead>
    <tbody>
      <tr></tr>
    </tbody>
  </table>

  <h1>Angle incident probability per detector relationship</h1>
  <small>
    Hygiene factor for the EPR. There should normally not be a correlation
    between the angle of measurement and probability of incident per detector
    as this would be inconsistent with the QM Prediction and violate reality.
  </small>
  <div id="graph-incidents" style="width: 100%; height: 300px"></div>

  <h1>Angle A-B detector bias</h1>
  <small>
    Hygiene factor for the EPR. There should normally not be any significant
    bias between the A or B detector for any angle of measurement
    as this would be inconsistent with the QM Prediction and violate reality.
  </small>
  <div id="graph-bias" style="width: 100%; height: 200px"></div>

  <h1>Total samples</h1>
  <small>
    Total samples/data points for each respective angle. Displays differences
    in resolution between angles. There is one respective resolution for
    incidents and one for coincidents.
  </small>
  <div id="graph-total" style="width: 100%; height: 200px"></div>

  <div id="result-data" style="display: none;">{{ results }}</div>
  <script>
    var N_SIML = {{ N_SIML }};
    var N_ARES = {{ N_ARES }};
    var N_SMAX_AR = {{ N_SMAX_AR }};
    var results = JSON.parse($("#result-data").text());

    var itod = function(i_angle, ang_res) {
      return (((Math.PI / 2) / ang_res) / 2) * (i_angle * 2 + 1) * 180 / Math.PI;
    };

    // Draw coincidents graph.
    $.plot($("#graph-coincidents"), (function() {
        var gdata = [];
        for (var group_name in results) {
          var hvt_res = results[group_name].result;
          var data = [];
          var dobj = {
            label: group_name,
            data: data
          };
          gdata.push(dobj);
          for (var i_angle = 0; i_angle < N_ARES; i_angle++) {
            var x = itod(i_angle, N_ARES);
            var y = hvt_res[i_angle].coincidents / hvt_res[i_angle].total_ci;
            data.push([x, y]);
          }
        }
        return gdata;
      })(), {
      xaxis: { min: 0, max: 90 },
      yaxis: { min: 0, max: 0.6 }
    });

    // Draw S max graph.
    $.plot($("#graph-s-max"), (function() {
        var gdata = [];
        for (var group_name in results) {
          var s_data = results[group_name].s_data;
          var data = [];
          var dobj = {
            label: group_name,
            data: data
          };
          gdata.push(dobj);
          var s_angles = null;
          var s_max = Number.NEGATIVE_INFINITY;
          for (var i_angle = 0; i_angle < N_SMAX_AR; i_angle++) {
            var x = itod(i_angle, N_SMAX_AR);
            var y = s_data[i_angle].s_max;
            if (y > s_max) {
              s_max = y;
              s_angles = s_data[i_angle].s_angles;
            }
            data.push([x, y]);
          }
          if (s_angles) {
            $("#table-s-max tbody").append(
              $("<tr>").append(
                $("<td>").text(group_name)
              ).append(
                $("<td>").text(s_max)
              ).append(
                $("<td>").text(s_angles[0])
              ).append(
                $("<td>").text(s_angles[1])
              ).append(
                $("<td>").text(s_angles[2])
              ).append(
                $("<td>").text(s_angles[3])
              )
            );
          }
        }
        return gdata;
      })(), {
      xaxis: { min: 0, max: 90 },
      yaxis: { min: 1, max: 3 }
    });

    // Draw incidents graph.
    $.plot($("#graph-incidents"), (function() {
        var gdata = [];
        for (var group_name in results) {
          var hvt_res = results[group_name].result;
          var data = [];
          var dobj = {
            label: group_name,
            data: data
          };
          gdata.push(dobj);
          for (var i_angle = 0; i_angle < N_ARES; i_angle++) {
            var x = itod(i_angle, N_ARES);
            var y = hvt_res[i_angle].incidents / hvt_res[i_angle].total_i;
            data.push([x, y]);
          }
        }
        return gdata;
      })(), {
      xaxis: { min: 0, max: 90 },
      yaxis: { min: 0.45, max: 0.55 }
    });

    // Draw bias graph.
    $.plot($("#graph-bias"), (function() {
        var gdata = [];
        for (var group_name in results) {
          var hvt_res = results[group_name].result;
          var data = [];
          var dobj = {
            label: group_name,
            data: data
          };
          gdata.push(dobj);
          for (var i_angle = 0; i_angle < N_ARES; i_angle++) {
            var x = itod(i_angle, N_ARES);
            var y = hvt_res[i_angle].bias / hvt_res[i_angle].incidents;
            data.push([x, y]);
          }
        }
        return gdata;
      })(), {
      xaxis: { min: 0, max: 90 },
      yaxis: { min: -0.2, max: 0.2 }
    });

    // Draw total samples.
    $.plot($("#graph-total"), (function() {
        var gdata = [];
        [0, 1].forEach(function(i) {
          for (var group_name in results) {
            var hvt_res = results[group_name].result;
            var data = [];
            var dobj = {
              label: group_name + (i == 0? ", Total iM": ", Total ciM"),
              data: data
            };
            gdata.push(dobj);
            for (var i_angle = 0; i_angle < N_ARES; i_angle++) {
              var x = itod(i_angle, N_ARES);
              var y = (i == 0? hvt_res[i_angle].total_i: hvt_res[i_angle].total_ci);
              data.push([x, y]);
            }
          }
        });
        return gdata;
      })(), {
      xaxis: { min: 0, max: 90 }
    });
  </script>
</body>
</html>
